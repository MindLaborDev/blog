---
import "../../styles/global.css";

import { CollectionEntry, getCollection } from "astro:content";

import LandingPageBackground from "../../components/LandingPageBackground.astro";
import Navigation from "../../components/Navigation.astro";
import Head from "../../components/Head.astro";
import DevToIcon from "../../components/icons/DevToIcon.astro";
import LinkedInIcon from "../../components/icons/LinkedInIcon.astro";
import Analytics from "../../components/Analytics.astro";

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    const authors = await getCollection("author");

    return posts.map((post) => {
        return {
            params: {
                slug: post.slug,
            },
            props: {
                post,
                author: authors.find(
                    (author) => author.slug === post.data.author
                ),
            },
        };
    });
}

interface Props {
    post: CollectionEntry<"blog">;
    author: CollectionEntry<"author">;
}

const { post, author } = Astro.props;
const { Content } = await post.render();
---

<html lang="en">
    <head>
        <Head />
        <meta name="description" content={post.data.share.description} />
        <meta name="author" content={author.data.name} />
        
        <meta name="twitter:card" content="summary" />
        <!-- <meta name="twitter:site" content="@{author.data.twitter}" />
        <meta name="twitter:creator" content="@{author.data.twitter}" /> -->
        <meta name="twitter:title" content={post.data.title} />
        <meta name="twitter:description" content={post.data.share.description} />
        <meta name="twitter:image" content={post.data.cover} />
        
        <meta property="og:type" content="article" />
        <meta property="article:published_time" content={post.data.date.toString()} />
        <meta property="article:author" content={author.data.name} />
        <meta property="article:tag" content={post.data.tags.join(",")} />
        
        <meta property="og:title" content={post.data.title} />
        <meta property="og:description" content={post.data.share.description} />
        <meta property="og:image" content={post.data.cover} />
        <meta property="og:url" content={`https://www.webry.com/${post.slug}`} />
        <meta property="og:locale" content="en_US" />
        <meta property="og:locale:alternate" content="en_GB" />

        <link rel="canonical" href={post.data.canonical} />

        <title>{post.data.title}</title>
        <Analytics />
    </head>
    <body class="noise-wrapper">
        <div class="noise"></div>
        <LandingPageBackground  />
        <Navigation />
        <main>
            <!-- <div>
                {
                    post.data.cover ? (
                        <img src={post.data.cover} alt="Post Cover" class="cover" />
                    ) : (
                        ""
                    )
                }
            </div> -->
            <div class="content">
                <h1 class="text-heading">{post.data.title}</h1>
                <div class="author-wrapper">
                    <div class="author">
                        <img
                            src={author.data.image}
                            alt="Author"
                            class="author__image"
                        />
                        <div class="author__name">
                            {author.data.name}<br />
                            <time
                                >Published on {
                                    new Date(post.data.date).toLocaleDateString()
                                }</time
                            >
                        </div>
                    </div>
                    <div class="socials">
                        <a
                            href={author.data.devto}
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <DevToIcon />
                        </a>
                        <a
                            href={author.data.linkedin}
                            target="_blank"
                            rel="noopener noreferrer"
                        >
                            <LinkedInIcon />
                        </a>
                    </div>
                </div>
                <div class="main-markdown-content">
                    <Content />
                </div>
            </div>
        </main>
        <script>
            const links = document.querySelectorAll("main a");
            links.forEach((link) => {
                if (
                    link instanceof HTMLLinkElement &&
                    link.href.startsWith("http")
                ) {
                    link.setAttribute("target", "_blank");
                    link.setAttribute("rel", "noopener noreferrer");
                }
            });
        </script>
        <style>
            main {
                max-width: 100ch;
                margin: 0 auto;
                margin-top: 5vh;
                border-radius: 0.5rem;
                background-color: var(--color-white);
                box-shadow: 0 0 var(--padding-big) var(--padding-big) #ffffff80;
                border: 1px solid var(--color-light-gray);
            }

            .content {
                padding: var(--padding-big);
            }

            .content h1 {
                font-size: clamp(1.953rem, 5vw, 3.052rem);
                line-height: 1.25em;
            }

            .content h2 {
                font-size: clamp(1.563rem, 5vw, 2.441rem);
                line-height: 1.25em;
            }

            .content h3 {
                font-size: clamp(1.25rem, 5vw, 1.953rem);
                line-height: 1.25em;
            }

            .cover {
                border-radius: 0.5rem;
            }

            .author-wrapper {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .author {
                display: flex;
                align-items: center;
                margin: 2rem 0;
            }

            .author__image {
                width: 2.5rem;
                height: 2.5rem;
                border-radius: 50%;
                margin-right: 1rem;
            }

            .author__name {
                line-height: 1.5rem;
            }

            .author__name time {
                opacity: 0.5;
            }

            .noise {
                position: fixed;
            }
        </style>
    </body>
</html>
