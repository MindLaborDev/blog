---
import "../../styles/global.css";

import { CollectionEntry, getCollection } from "astro:content";

import Navigation from "../../components/Navigation.astro";
import Head from "../../components/Head.astro";
import DevToIcon from "../../components/icons/DevToIcon.astro";
import Analytics from "../../components/Analytics.astro";
import Footer from "../../components/Footer.astro";

export async function getStaticPaths() {
    const articles = await getCollection("blog");
    const authors = await getCollection("author");

    return articles.map((post) => {
        return {
            params: {
                slug: post.slug,
            },
            props: {
                post,
                author: authors.find(
                    (author) => author.slug === post.data.author
                ),
            },
        };
    });
}

interface Props {
    post: CollectionEntry<"blog">;
    author: CollectionEntry<"author">;
}

const { post, author } = Astro.props;
const schema = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    mainEntityOfPage: {
        "@type": "WebPage",
        "@id": "https://www.webry.com/article/" + post.slug,
    },
    headline: post.data.title,
    description: post.data.share.description,
    image: `https://www.webry.com/assets/blog/${post.slug}/cover.jpg.webp`,
    author: {
        "@type": "Person",
        name: author.data.name,
        url: author.data.linkedin,
    },
    publisher: {
        "@type": "Organization",
        name: "Webry",
        logo: {
            "@type": "ImageObject",
            url: "https://www.webry.com/assets/branding/logo-light.svg",
        },
    },
    datePublished: post.data.date.toISOString(),
    dateModified: post.data.moddate.toISOString(),
});
const { Content } = await post.render();

// TODO: Future me, https://dev.to/api/articles/148356
---

<html lang="en">
    <head>
        <Head />
        <meta name="description" content={post.data.share.description} />
        <meta name="author" content={author.data.name} />

        <meta name="twitter:card" content="summary" />
        <meta name="twitter:title" content={post.data.title} />
        <meta
            name="twitter:description"
            content={post.data.share.description}
        />
        <meta name="twitter:image" content={post.data.cover} />

        <meta property="og:type" content="article" />
        <meta
            property="article:published_time"
            content={post.data.date.toString()}
        />
        <meta property="article:author" content={author.data.name} />
        <meta property="article:tag" content={post.data.tags.join(",")} />

        <meta property="og:title" content={post.data.title} />
        <meta property="og:description" content={post.data.share.description} />
        <meta property="og:image" content={post.data.cover} />
        <meta
            property="og:url"
            content={`https://www.webry.com/${post.slug}`}
        />
        <meta property="og:locale" content="en_US" />
        <meta property="og:locale:alternate" content="en_GB" />

        <title>{post.data.title}</title>

        <link rel="canonical" href={post.data.devto} />
        <script type="application/ld+json" set:html={schema}></script>
        <Analytics />
    </head>
    <body>
        <Navigation />
        <main class="container">
            <div class="content">
                <h1 class="text-heading">{post.data.title}</h1>
                <div class="author-wrapper">
                    <div class="author">
                        <a
                            href="/about"
                            aria-label="About Samuel Braun"
                            title="About Samuel Braun"
                            ><img
                                src={author.data.image}
                                alt="Author"
                                class="author__image"
                            /></a
                        >
                        <div class="author__name">
                            <a href="/about" aria-label="About Samuel Braun"
                                >{author.data.name}</a
                            ><br />
                            <time
                                >Published on {
                                    new Date(
                                        post.data.date
                                    ).toLocaleDateString()
                                }</time
                            >
                        </div>
                    </div>
                    <div class="socials">
                        <a
                            href={post.data.devto}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="socials__devto"
                            aria-label="Visit this post on Dev.to"
                            title="Visit this post on Dev.to"
                        >
                            <DevToIcon />
                        </a>
                    </div>
                </div>
                <div class="main-markdown-content flow-content">
                    <Content />
                </div>
            </div>
        </main>
        <button aria-label="Scroll to top" class="scroll-to-top">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="feather feather-chevron-up"
                ><polyline points="18 15 12 9 6 15"></polyline></svg
            >
        </button>
        <Footer />
        <script>
            const links = document.querySelectorAll("main a");
            links.forEach((link) => {
                if (
                    link instanceof HTMLLinkElement &&
                    link.href.startsWith("http")
                ) {
                    link.setAttribute("target", "_blank");
                    link.setAttribute("rel", "noopener noreferrer");
                }
            });

            const scrollButton = document.querySelector(".scroll-to-top");
            scrollButton.addEventListener("click", () => {
                window.scrollTo({ top: 0, behavior: "smooth" });
            });
        </script>
        <style>
            main {
                max-width: 100ch;
                margin: 0 auto;
                margin-top: 5vh;
                border-radius: 0.5rem;
                padding: 0 3rem;
            }

            .cover {
                border-radius: 0.5rem;
            }

            .author-wrapper {
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .author {
                display: flex;
                align-items: center;
                margin: 2rem 0;
                text-align: left;
            }

            .author__image {
                width: 2.5rem;
                height: 2.5rem;
                border-radius: 50%;
                margin-right: 1rem;
            }

            .author__name {
                line-height: 1.5rem;
            }

            .author__name time {
                opacity: 0.5;
            }

            .scroll-to-top {
                position: sticky;
                bottom: 3rem;
                left: calc(100vw - 7rem);
                background: var(--color-black);
                color: var(--color-white);
                border-radius: 50%;
                width: 3rem;
                height: 3rem;
                display: flex;
                justify-content: center;
                align-items: center;
                cursor: pointer;
            }

            .scroll-to-top:hover {
                background: var(--color-dark-secondary);
            }

            @media (max-width: 768px) {
                .scroll-to-top {
                    bottom: 3rem;
                }
            }
        </style>
    </body>
</html>
